import React, { useState } from "react";
import ChatBot from "react-chatbotify";
import Stars from "../src/components/raiting/raiting"; 

const MyChatBot = () => {
      const [form, setForm] = useState({});
      const [rating, setRating] = useState(0);
    
      const handleRating = (rate) => {
        setRating(rate);
        setForm({ ...form, rating: rate });
      };

      const handleChoice = (params) => {
            setForm(currentForm => ({ ...currentForm, choice: params.userInput }));
          };
    
      const flow = {
            start: {
                  message: "LÃ¼tfen bir seÃ§enek seÃ§in: Colin's Web ya da Colin's MaÄŸazalarÄ±",
                  options: ["Colin's Web", "Colin's MaÄŸazalarÄ±"],
                  function: handleChoice,
                  path: (params) => (params.userInput === "Colin's Web" ? "web_options" : "store_options"),
                },
        web_options: {
          message: "SipariÅŸlerim ve Kargo seÃ§eneklerini seÃ§in",
          options: ["SipariÅŸlerim", "Kargo"],
          function: (params) => setForm({ ...form, web_option: params.userInput }),
          path: (params) => (params.userInput === "SipariÅŸlerim" ? "order_questions" : "shipping_options"),
        },
        order_questions: {
          message: "NasÄ±l iptal edebilirim veya ne zaman gelir?",
          options: ["Ä°ptal", "Teslimat SÃ¼resi"],
          function: (params) => setForm({ ...form, order_question: params.userInput }),
          path: (params) => (params.userInput === "Ä°ptal" ? "cancel_info" : "delivery_info"),
        },
        shipping_options: {
          message: "ÃœrÃ¼nÃ¼m yanlÄ±ÅŸ geldi veya Ã¼rÃ¼nÃ¼m kusurlu geldi seÃ§eneklerinden birini seÃ§iniz.",
          options: ["ÃœrÃ¼nÃ¼m yanlÄ±ÅŸ geldi", "ÃœrÃ¼nÃ¼m kusurlu geldi"],
          function: (params) => setForm({ ...form, shipping_option: params.userInput }),
          path: (params) => (params.userInput === "ÃœrÃ¼nÃ¼m yanlÄ±ÅŸ geldi" ? "wrong_product_info" : "faulty_product_info"),
        },
        cancel_info: {
          message: "DeÄŸerli mÃ¼ÅŸterimiz, sipariÅŸi verilmiÅŸ Ã¼rÃ¼nlerin iptali yapÄ±lamamaktadÄ±r. SipariÅŸinizi verdiÄŸiniz Ã¼rÃ¼nler verilen adreste ilgili kiÅŸiler bulunamadÄ±ÄŸÄ± taktirde tekrar Colin's'e iade edilecektir. YapÄ±lacak kontroller sonrasÄ± Ã¶demiÅŸ olduÄŸunuz tutar tarafÄ±nÄ±za iade edilir. ğŸ’³ğŸ’µ AyrÄ±ntÄ±lÄ± bilgi iÃ§in 444 53 26 Colin's MÃ¼ÅŸteri Destek hattÄ±nÄ± arayabilirsiniz. ğŸ˜Š BaÅŸka bir iÅŸlem yapmak istiyor musunuz?",
          options: ["Evet", "HayÄ±r"],
          function: (params) => setForm({ ...form, another_action: params.userInput }),
          path: (params) => (params.userInput === "Evet" ? "start" : "rate_experience"),
        },
        rate_experience: {
          message: "LÃ¼tfen deneyiminizi deÄŸerlendirin:",
          render: (
            <Stars
              count={5}
              defaultRating={0}
              icon="â˜…"
              color="yellow"
              iconSize={24}
              onClick={handleRating} // handleRating fonksiyonunu onClick prop'una veriyoruz
            />
          ),
          options: ["GÃ¶nder"],
          path: "end",
        },
        end: {
          message: `DeÄŸerlendirmeniz iÃ§in teÅŸekkÃ¼r ederiz! ${form.rating} yÄ±ldÄ±z verdiniz. Yorumunuz kaydedildi.`,
        },
      };
    
      return (
        <ChatBot
          options={{
            chatHistory: { storageKey: "example_advanced_form" },
          }}
          flow={flow}
        />
      );
    };
    
    export default MyChatBot;